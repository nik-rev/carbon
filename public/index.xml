<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nikita Revenco</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on Nikita Revenco</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Fri, 04 Oct 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>So I gave Helix a try and now I can&#39;t see myself using any other text editor</title>
      <link>http://localhost:1313/post/switched-to-helix/</link>
      <pubDate>Fri, 04 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/switched-to-helix/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been using VSCode for several months when I first started programming. It was fine, but I was tired of using like 40 plugins and not using any of them to their capabilities.&lt;/p&gt;&#xA;&lt;p&gt;At the end of the day it felt like I had no control over my editor and I didn&amp;rsquo;t have an idea of how things were going on. Because I didn&amp;rsquo;t.&lt;/p&gt;&#xA;&lt;p&gt;I&amp;rsquo;ve been hearing about Neovim for a while until this point decided to give it a try. I expected it to be difficult to get started, because it&amp;rsquo;s a mouseless modal editor &amp;ndash; a completely new way of editing code than what I&amp;rsquo;ve been used to.&lt;/p&gt;</description>
    </item>
    <item>
      <title>I switched to NixOS from Arch Linux and I&#39;m never going back</title>
      <link>http://localhost:1313/post/switched-to-nixos/</link>
      <pubDate>Wed, 02 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/switched-to-nixos/</guid>
      <description>&lt;p&gt;10 months ago I tried Linux for the first time. First it was Ubuntu, then I switched to Debian, then Arch Linux.&lt;/p&gt;&#xA;&lt;p&gt;I tested them all for a few months and was mostly happy with my Arch Linux for about 6 months.&lt;/p&gt;&#xA;&lt;h1 id=&#34;first-encounter-with-nixos&#34;&gt;First Encounter with NixOS&lt;/h1&gt;&#xA;&lt;p&gt;That was until 1 week ago where I decided &amp;ldquo;everyone seems to be talking about nix, idk what that is, I won&amp;rsquo;t do any research, just going to boot it on my computer and see what happens&amp;rdquo;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Quest to understand the idea of &#34;Everything is a file&#34;</title>
      <link>http://localhost:1313/post/everything-is-a-file/</link>
      <pubDate>Sun, 22 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/everything-is-a-file/</guid>
      <description>&lt;p&gt;I had been using Windows for most of my life. I didn&amp;rsquo;t know much about files &amp;ndash; I thought that files are just what programs use to store their data (e.g. Notepad using &lt;code&gt;.txt&lt;/code&gt; extension, Photoshop with its &lt;code&gt;.psd&lt;/code&gt;, etc.)&lt;/p&gt;&#xA;&lt;p&gt;I assumed that a file&amp;rsquo;s purpose is &lt;em&gt;defined by its extension&lt;/em&gt;. And this conclusion made sense to me at the time, since for example I couldn&amp;rsquo;t open a &lt;code&gt;.mp4&lt;/code&gt; file format in Photoshop.&lt;/p&gt;</description>
    </item>
    <item>
      <title>13 Neovim tips and life hacks that significantly improved my productivity</title>
      <link>http://localhost:1313/post/useful-neovim-tricks/</link>
      <pubDate>Wed, 11 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/useful-neovim-tricks/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been using Neovim for quite some time and have went through the entire Wiki. I would like to share some of my most loved tricks.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;^&lt;/code&gt; to move to first non-whitespace character, &lt;code&gt;$&lt;/code&gt; for first character&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;+&lt;/code&gt; and &lt;code&gt;-&lt;/code&gt; move to line below and above but non-whitespace characters 15&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;j&lt;/code&gt;, &lt;code&gt;k&lt;/code&gt;, &lt;code&gt;l&lt;/code&gt;, &lt;code&gt;h&lt;/code&gt; to move down, up, left, right 1&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;G&lt;/code&gt; end of file, &lt;code&gt;gg&lt;/code&gt; beginning of file 14&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;%&lt;/code&gt; jump to matching parenthesis&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;t&lt;/code&gt; jump before character, &lt;code&gt;f&lt;/code&gt; jump to character, &lt;code&gt;T&lt;/code&gt; and &lt;code&gt;F&lt;/code&gt; are the reverse&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;,&lt;/code&gt; and &lt;code&gt;;&lt;/code&gt; repeat &lt;code&gt;t&lt;/code&gt;, &lt;code&gt;T&lt;/code&gt;, &lt;code&gt;f&lt;/code&gt;, &lt;code&gt;F&lt;/code&gt; in same and opposite directions&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;/&lt;/code&gt; search forward, &lt;code&gt;?&lt;/code&gt; search backward&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;I&lt;/code&gt;, &lt;code&gt;i&lt;/code&gt;, &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;A&lt;/code&gt; append at beginning of line / character and end of line / character&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;guu&lt;/code&gt;, &lt;code&gt;gUU&lt;/code&gt; and &lt;code&gt;g~~&lt;/code&gt; will make the current line lowercase, uppercase or alternate case&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;40gg&lt;/code&gt; to jump to the 40th line&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;D&lt;/code&gt;, &lt;code&gt;Y&lt;/code&gt; and &lt;code&gt;C&lt;/code&gt; instead of &lt;code&gt;d$&lt;/code&gt;, &lt;code&gt;y$&lt;/code&gt; and &lt;code&gt;c$&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;gx&lt;/code&gt; opens link under cursor&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;gf&lt;/code&gt; opens relative or absolute file path under cursor&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;CTRL v&lt;/code&gt; visual block mode&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;J&lt;/code&gt; join line&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;dk&lt;/code&gt; and &lt;code&gt;dj&lt;/code&gt; to delete 2 lines easily&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;yib&lt;/code&gt; is the same as &lt;code&gt;yi(&lt;/code&gt; but easier to type&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;gu&lt;/code&gt;, &lt;code&gt;gU&lt;/code&gt; and &lt;code&gt;g~&lt;/code&gt; are operators that make the text lowercase, uppercase, or alternate case&lt;/li&gt;&#xA;&lt;li&gt;in VISUAL &lt;code&gt;g CTRL v&lt;/code&gt; increment each line in selection based on line number, e.g. &lt;code&gt;0 0 0 0&lt;/code&gt; (separated by newlines) will become &lt;code&gt;1 2 3 4&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;d/hello&lt;/code&gt; deletes until hello is found, &lt;code&gt;d/hello/e&lt;/code&gt; deletes including the hello&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;#&lt;/code&gt; and &lt;code&gt;*&lt;/code&gt; find the identifier under cursor forwards and backwards&lt;/li&gt;&#xA;&lt;li&gt;in VISUAL &lt;code&gt;&amp;lt;&lt;/code&gt; and &lt;code&gt;&amp;gt;&lt;/code&gt; dedent and indent selection&lt;/li&gt;&#xA;&lt;li&gt;in VISUAL BLOCK &lt;code&gt;I&lt;/code&gt; to prepend to all lines at the start of selection, &lt;code&gt;$A&lt;/code&gt; to append at end of lines&lt;/li&gt;&#xA;&lt;li&gt;and &lt;code&gt;xp&lt;/code&gt; to swap 2 characters&lt;/li&gt;&#xA;&lt;li&gt;CTRL a increases numbr by 1, CTRL x decreases by 1. also takes in a count&lt;/li&gt;&#xA;&lt;li&gt;in VISUAL &lt;code&gt;o&lt;/code&gt; will go to the opposite end of the selection&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;gv&lt;/code&gt; to reselect the last selection&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;CTRL wx&lt;/code&gt; swap window&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;CTRL wv&lt;/code&gt; split vertically and &lt;code&gt;CTRL ws&lt;/code&gt; horizontally&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;CTRL wq&lt;/code&gt; quit window&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;CTRL w=&lt;/code&gt; equalize window sizes&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;vap&lt;/code&gt; select around paragraph&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;r&lt;/code&gt; replace a character&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;gp&lt;/code&gt; and &lt;code&gt;gP&lt;/code&gt; are like &lt;code&gt;p&lt;/code&gt; and &lt;code&gt;P&lt;/code&gt; but leave cursor after pasted text&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;CTRL g&lt;/code&gt; show filename and line count&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;:center&lt;/code&gt; centers text&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;zz&lt;/code&gt;, &lt;code&gt;zt&lt;/code&gt;, &lt;code&gt;zb&lt;/code&gt; position cursor in middle, top and bottom of screen&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;ga&lt;/code&gt; prints info about character under the cursor&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;g?&lt;/code&gt; is an operator that will rot13 encode the input&lt;/li&gt;&#xA;&lt;li&gt;Using a count with an insert operator e.g. &lt;code&gt;o&lt;/code&gt;, &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;I&lt;/code&gt; etc will write it in insert mode that many times&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;gi&lt;/code&gt; insert text in same position as where insert mode was stopped last time&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;/pattern/e&lt;/code&gt; search for pattern and put cursor on the last character of pattern&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;/pattern/e+1&lt;/code&gt; ^ but +1 char to the left&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;:%s/pattern//n&lt;/code&gt; count number matches for pattern&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;:sort u&lt;/code&gt; sort whole file or range in VISUAL mode unique&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;:sort n&lt;/code&gt; sorts by number that it will find within the line&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;/apple\C&lt;/code&gt; for case-sensitive search&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;g;&lt;/code&gt; go to previous insert location&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;g,&lt;/code&gt; to to next previous insert location&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;gi&lt;/code&gt; insert mode in last edit location&lt;/li&gt;&#xA;&lt;li&gt;in INSERT &lt;code&gt;CTRL u&lt;/code&gt; delete all characters in current line&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;&#39;&#39;&lt;/code&gt; jump to before last jump&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;[{&lt;/code&gt;, &lt;code&gt;]{&lt;/code&gt;, &lt;code&gt;[(&lt;/code&gt; and &lt;code&gt;](&lt;/code&gt; go to last/next unmatched &lt;code&gt;{&lt;/code&gt; and &lt;code&gt;(&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;g&amp;amp;&lt;/code&gt; repeat last &lt;code&gt;:s&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;g$&lt;/code&gt;, &lt;code&gt;g0&lt;/code&gt;, &lt;code&gt;g^&lt;/code&gt; are like &lt;code&gt;$&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;^&lt;/code&gt; but will respect wrapped lines&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;gJ&lt;/code&gt; joins lines without inserting space&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;gq&lt;/code&gt; wrap lines&lt;/li&gt;&#xA;&lt;li&gt;In O-PENDING mode we can use &lt;code&gt;v&lt;/code&gt;, &lt;code&gt;V&lt;/code&gt; and &lt;code&gt;CTRL v&lt;/code&gt; to force operator to work charwise, linewise or blockwise&lt;/li&gt;&#xA;&lt;li&gt;in command line &lt;code&gt;CTRL g&lt;/code&gt; and &lt;code&gt;CTRL t&lt;/code&gt; next and previous match (useful for when using &lt;code&gt;/&lt;/code&gt; or &lt;code&gt;?&lt;/code&gt; with an operator)&lt;/li&gt;&#xA;&lt;li&gt;in command line &lt;code&gt;CTRL r+&lt;/code&gt; paste contents from register &lt;code&gt;+&lt;/code&gt; (so system clipboard, but we can use with other registers)&lt;/li&gt;&#xA;&lt;li&gt;in command line &lt;code&gt;CTRL u&lt;/code&gt; remove all characters&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;:%norm&lt;/code&gt; execute command on every line, or &lt;code&gt;:norm&lt;/code&gt; for the lines selected. e.g. &lt;code&gt;:%norm $ciwhello&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;:g&lt;/code&gt; execute command on each line that match pattern, e.g. &lt;code&gt;:g/^#/d&lt;/code&gt; delete all comments from bash file&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;:%s&lt;/code&gt; substitute, e.g. &lt;code&gt;:%s/foo/bar/g&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;:g/foo/s/bar/baz/g&lt;/code&gt; substitute bar with baz on all lines that contain foo&lt;/li&gt;&#xA;&lt;li&gt;pipe output of commands into &lt;code&gt;| nvim&lt;/code&gt;, super useful&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;/\%V&lt;/code&gt; will search inside visual selection&lt;/li&gt;&#xA;&lt;li&gt;If clipboard register is &lt;code&gt;unnamedplus&lt;/code&gt;, stuff we copy using system clipboard (not in vim) will also always be saved in the &lt;code&gt;&amp;quot;*&lt;/code&gt; register, which is handy. e.g. we &lt;code&gt;dd&lt;/code&gt; a line, it won&amp;rsquo;t override what we copied!&lt;/li&gt;&#xA;&lt;li&gt;use &lt;code&gt;dj&lt;/code&gt; and &lt;code&gt;dk&lt;/code&gt; to delete the current line and the line above/below&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;&amp;lt;C-f&amp;gt;&lt;/code&gt; edit ex mode in insert and normal modes&lt;/li&gt;&#xA;&lt;li&gt;use &lt;code&gt;_&lt;/code&gt; instead of &lt;code&gt;^&lt;/code&gt; because it takes to first character on line and accepts a motion for N lines back, and easier to reach&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>How I install Arch Linux with full disk encryption</title>
      <link>http://localhost:1313/post/arch-install/</link>
      <pubDate>Mon, 02 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/arch-install/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve grown to love Arch Linux due to its simplicity and ease of use. However installing it can be a bit of a process, especially if you want to do it with full disk encryption. I&amp;rsquo;ve compiled a quick guide on how I do it in this post.&lt;/p&gt;&#xA;&lt;h1 id=&#34;installation&#34;&gt;Installation&lt;/h1&gt;&#xA;&lt;p&gt;Go to &lt;a href=&#34;https://archlinux.org/download/&#34;&gt;arch linux downloads&lt;/a&gt; and head over to the &lt;code&gt;geo.mirror.pkgbuild.com&lt;/code&gt; link under the &amp;ldquo;Worldwide&amp;rdquo; HTTP direct downloads.&lt;/p&gt;&#xA;&lt;p&gt;Install the following files from there:&lt;/p&gt;</description>
    </item>
    <item>
      <title>About</title>
      <link>http://localhost:1313/about/</link>
      <pubDate>Wed, 21 Aug 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/about/</guid>
      <description>&lt;p&gt;Lorem ipsum dolor sit amet, et essent mediocritatem quo, choro volumus oporteat an mei. Ipsum dolor sit amet, et essent mediocritatem quo.&lt;/p&gt;</description>
    </item>
    <item>
      <title>I was forced to use Linux. But now I love it.</title>
      <link>http://localhost:1313/post/linux-first-time/</link>
      <pubDate>Wed, 21 Aug 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/linux-first-time/</guid>
      <description>&lt;p&gt;In December of 2023 I wanted to learn Web development, for fun. I was 6 months away from my A-Level exams and I was really bored.&lt;/p&gt;&#xA;&lt;p&gt;I found this website called &lt;a href=&#34;https://www.theodinproject.com/&#34;&gt;The Odin Project&lt;/a&gt;, which is a free and open-source curriculum for learning web development. Perfect!&lt;/p&gt;&#xA;&lt;h1 id=&#34;forced-into-linux&#34;&gt;Forced into Linux&lt;/h1&gt;&#xA;&lt;p&gt;Unfortunately, one of the requirements for the course was to use Linux. Odin Project didn&amp;rsquo;t support Windows, only Mac and Linux at the time. I didn&amp;rsquo;t have a Mac, so&amp;hellip;&lt;/p&gt;</description>
    </item>
    <item>
      <title>What you might not know about Semantic Blockquotes in HTML</title>
      <link>http://localhost:1313/post/obscure-semantic-html/</link>
      <pubDate>Wed, 17 Apr 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/obscure-semantic-html/</guid>
      <description>&lt;p&gt;I think most people know the basics about semantic HTML, where you use the correct HTML elements to clearly state the purpose of a page.&lt;/p&gt;&#xA;&lt;p&gt;For example, instead of a &amp;ldquo;soup of divs&amp;rdquo; like this:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;content&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;header&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;button&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;footer&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;It&amp;rsquo;s better to use HTML elements designed specifically to describe the meaning of the page semantically:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;header&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;button&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;footer&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Semantic HTML is extremely important for websites due to two main factors:&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/archives/</link>
      <pubDate>Tue, 28 May 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/archives/</guid>
      <description></description>
    </item>
  </channel>
</rss>
